//ПЕРВЫЙ КОД НА JAVA - создание однонаправленного линейного списка и добавление элементов
// Класс узла списка  
class Node {  
    int data;    // данные  
    Node next;   // ссылка на следующий узел  
      
    // Конструктор узла  
    Node(int data) {  
        this.data = data;  
        this.next = null;  
    }  
}  
  
// Класс односвязного списка  
class LinkedList {  
    Node head;    // голова списка  
      
    // Добавление элемента в конец списка  
    public void add(int data) {  
        Node newNode = new Node(data);  
        if (head == null) {  
            head = newNode;  
            return;  
        }  
        Node current = head;  
        while (current.next != null) {  
            current = current.next;  
        }  
        current.next = newNode;  
    }  
      
    // Вывод всех элементов списка  
    public void printList() {  
        Node current = head;  
        while (current != null) {  
            System.out.print(current.data + " ");  
            current = current.next;  
        }  
        System.out.println();  
    }  
}  
  
// Основной класс для тестирования  
public class Main {  
    public static void main(String[] args) {  
        LinkedList list = new LinkedList();
        list.add(10);  
        list.add(20);  
        list.add(30);  
        list.add(40);  
        System.out.println("Элементы списка:");  
        list.printList();  
    }  
}  



//ВТОРОЙ КОД НА JAVA - подсчёт количсетва элементов в однонаправленном линейном списке
// Класс для работы с односвязным списком
public class SimpleLinkedList {
    
    // Внутренний класс для узла списка
    class Node {
        int data;    // Хранимые данные
        Node next;   // Ссылка на следующий узел
        
        // Конструктор узла
        Node(int data) {
            this.data = data;
            this.next = null;
        }
    }
    private Node head;  // Голова списка
    
    // Метод добавления элемента в конец списка
    public void add(int data) {
        Node newNode = new Node(data);
        if (head == null) {  // Если список пустой
            head = newNode;
        } else {
            Node current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }
    
    // Метод подсчета количества элементов
    public int countElements() {
        int count = 0;
        Node current = head;
        while (current != null) {
            count++;
            current = current.next;
        }
        
        return count;
    }
    
    // Основной метод для тестирования
    public static void main(String[] args) {
        SimpleLinkedList list = new SimpleLinkedList();
        
        // Добавляем элементы в список
        list.add(10);
        list.add(20);
        list.add(30);
        list.add(40);
        
        // Выводим количество элементов
        System.out.println("Количество элементов в списке: " + list.countElements());
    }
}
